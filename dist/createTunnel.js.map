{"version":3,"sources":["../src/createTunnel.js"],"names":["CreateTunnel","appName","port","createTunnel","opt","subdomain","localtunnel","require","tunnel","err","console","log","process","exit","url","on"],"mappings":";;;;;;;;;;IAAMA,Y;AAEJ,wBAAYC,OAAZ,EAAoBC,IAApB,EAAyB;AAAA;;AACvB,SAAKC,YAAL,CAAkBF,OAAlB,EAA0BC,IAA1B;AACD;;;;iCAEYD,O,EAAQC,I,EAAK;;AAExB,UAAIE,MAAM;AACRC,mBAAWJ;AADH,OAAV;;AAIA,UAAIK,cAAcC,QAAQ,aAAR,CAAlB;AACA,UAAIC,SAASF,YAAYJ,IAAZ,EAAkBE,GAAlB,EAAuB,UAAUK,GAAV,EAAeD,MAAf,EAAsB;AACxD,YAAGC,GAAH,EAAO;AACLC,kBAAQC,GAAR,CAAY,oBAAZ;AACAC,kBAAQC,IAAR,CAAa,CAAb,EAFK,CAEY;AAClB;AACDL,eAAOM,GAAP;AACD,OANY,CAAb;;AAQAN,aAAOO,EAAP,CAAU,OAAV,EAAmB,YAAY;AAC7BH,gBAAQC,IAAR,CAAa,CAAb;AACD,OAFD;;AAIAL,aAAOO,EAAP,CAAU,OAAV,EAAmB,UAAUN,GAAV,EAAe;AAChCG,gBAAQC,IAAR,CAAaJ,GAAb;AACD,OAFD;;AAIAG,cAAQG,EAAR,CAAW,mBAAX,EAAgC,UAAUN,GAAV,EAAe;AAC7CG,gBAAQC,IAAR,CAAaJ,GAAb;AACD,OAFD;;AAIAC,cAAQC,GAAR,CAAY,0BAA0BT,IAA1B,GAAiC,SAAjC,GAA6CD,OAAzD;AAED;;;;;;kBAKYD,Y","file":"createTunnel.js","sourcesContent":["class CreateTunnel {\r\n\r\n  constructor(appName,port){\r\n    this.createTunnel(appName,port);\r\n  }\r\n\r\n  createTunnel(appName,port){\r\n\r\n    var opt = {\r\n      subdomain: appName\r\n    }\r\n\r\n    var localtunnel = require('localtunnel');\r\n    var tunnel = localtunnel(port, opt, function (err, tunnel){\r\n      if(err){\r\n        console.log('localltunnel error');\r\n        process.exit(1); // we want it to restart and get a local tunnel that works\r\n      }\r\n      tunnel.url;\r\n    });\r\n\r\n    tunnel.on('close', function () {\r\n      process.exit(1);\r\n    });\r\n\r\n    tunnel.on('error', function (err) {\r\n      process.exit(err);\r\n    });\r\n\r\n    process.on('uncaughtException', function (err) {\r\n      process.exit(err);\r\n    });\r\n\r\n    console.log('Tunnel created,port: ' + port + ' name: ' + appName);\r\n\r\n  }\r\n\r\n\r\n}\r\n\r\nexport default CreateTunnel;\r\n"]}